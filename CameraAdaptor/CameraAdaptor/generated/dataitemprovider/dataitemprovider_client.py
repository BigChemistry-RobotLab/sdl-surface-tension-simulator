# Generated by sila2.code_generator; sila2.__version__: 0.12.2
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:

    from typing import Iterable, Optional

    from dataitemprovider_types import CaptureImage_Responses, StoreImage_Responses
    from sila2.client import ClientMetadataInstance


class DataItemProviderClient:
    """

    Camera provider server that captures and stores a single image with the connected camera.
    In the mocked state the concentration of SDS is retrieved from the data service,
    this concentration is used to generate an image approximately representing the drop as it would look with that concentration of SDS.

    """

    def CaptureImage(self, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None) -> CaptureImage_Responses:
        """
        Capture a single image with the connected camera.
        """
        ...

    def StoreImage(
        self, ItemPath: str, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> StoreImage_Responses:
        """
        Store image in experimental data storage
        """
        ...
