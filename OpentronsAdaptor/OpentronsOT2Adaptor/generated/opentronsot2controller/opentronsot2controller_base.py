# Generated by sila2.code_generator; sila2.__version__: 0.12.2
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict

from .opentronsot2controller_types import PrepareDrop_Responses

if TYPE_CHECKING:

    from ...server import Server


class OpentronsOT2ControllerBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """

        Mock controller for the Opentrons OT-2 autonomous pipetting robot.

        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def PrepareDrop(self, ExperimentPlanPath: str, *, metadata: MetadataDict) -> PrepareDrop_Responses:
        """
        Mock prepare pendant drop with concentration SDS retrieved from experiment plan.


        :param ExperimentPlanPath: Storage location of the experiment plan in the form of a file path.

        :param metadata: The SiLA Client Metadata attached to the call

        """
