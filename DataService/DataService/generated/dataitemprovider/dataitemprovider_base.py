# Generated by sila2.code_generator; sila2.__version__: 0.12.2
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING, Any, List

from sila2.server import FeatureImplementationBase, MetadataDict

from .dataitemprovider_types import (
    CreateDataCollection_Responses,
    CreateDataItem_Responses,
    CreateDataNamespace_Responses,
    GetDataItem_Responses,
)

if TYPE_CHECKING:

    from ...server import Server


class DataItemProviderBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """

        Storing of experimental data, the experimental workflow produces a uniquely-named container called a data namespace. This data namespace holds data items and data containers.
        Data items represent uniquely-named items of data and data collections are uniquely-named collections of data items.
        Items and collections are referenced to in the form of file paths like so: namespaceName/collectionName/dataItemName.

        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def CreateDataNamespace(self, DataNamespaceName: str, *, metadata: MetadataDict) -> CreateDataNamespace_Responses:
        """
        Creates a uniquely named data namespace.


        :param DataNamespaceName: The unique name of the data namespace.

        :param metadata: The SiLA Client Metadata attached to the call

        """

    @abstractmethod
    def CreateDataCollection(self, CollectionPath: str, *, metadata: MetadataDict) -> CreateDataCollection_Responses:
        """
        Create a new data item collection inside of data namespace.


        :param CollectionPath: The path to the collection to be created with a unique name.

        :param metadata: The SiLA Client Metadata attached to the call

        """

    @abstractmethod
    def CreateDataItem(
        self, ItemPath: str, Content: bytes, ItemProperties: List[Any], *, metadata: MetadataDict
    ) -> CreateDataItem_Responses:
        """
        Creates a uniquely named data item inside of data collection and namespace.


        :param ItemPath: The path to the data item to be created with a unique name inside of a collection and namespace.

        :param Content: Content of data item.

        :param ItemProperties: Properties of data item as key value pair.

        :param metadata: The SiLA Client Metadata attached to the call

        """

    @abstractmethod
    def GetDataItem(self, ItemPath: str, *, metadata: MetadataDict) -> GetDataItem_Responses:
        """
        Gets data item by name from collection and namespace.


        :param ItemPath: The path to the data item inside of a collection and namespace.

        :param metadata: The SiLA Client Metadata attached to the call

        :return:

            - DataItemContent: Content of the data item.

            - ItemProperties: Properties of data item.


        """
